=============== PARSE TREE ===============
(((VOID )print_int$0(((SIGNED LONG INT )integer$0)));
)
(((VOID )print_string$0(((SIGNED CHAR )( *string$0))));
)
(((SIGNED LONG INT )read_int$0(((VOID ))));
)
(((VOID )read_string$0(((SIGNED LONG INT )length$0),(((SIGNED CHAR )( *buffer$0)))));
)
(((VOID )exit$0(((VOID ))));
)
(((VOID )optimization_demo$0(((SIGNED LONG INT )n$0)));
)
(((VOID )auto_casting_demo$0(((VOID ))));
)
(((SIGNED CHAR )( *strcpy$0(((SIGNED CHAR )( *src$0)),(((SIGNED CHAR )( *dest$0))))));
)
(((SIGNED LONG INT )factorial$0(((SIGNED LONG INT )n$0)));
)
((SIGNED LONG INT )main$0(((VOID ))){
(((SIGNED CHAR )(prompt$0[80]));
;
((SIGNED LONG INT )(n$0),(f$0));
;
(strcpy$0(prompt$0,STRING(70 97 99 116 111 114 105 97 108 32 111 102 32 0 )));
(print_string$0(prompt$0));
(n$0 = (read_int$0((VOID ))));
(strcpy$0(prompt$0,STRING(32 101 113 117 97 108 115 32 0 )));
(print_string$0(prompt$0));
(f$0 = (factorial$0(n$0)));
(print_int$0(f$0));
(strcpy$0(prompt$0,STRING(10 0 )));
(print_string$0(prompt$0));
(auto_casting_demo$0((VOID )));
RETURN (0);
)
})
((SIGNED CHAR )( *strcpy$0(((SIGNED CHAR )( *src$0)),(((SIGNED CHAR )( *dest$0))))){
(((SIGNED CHAR )( *initial_dest$0));
;
(initial_dest$0 = dest$0);
DO {
(((* (dest$0 ++)) = (* src$0));
)
} WHILE(((* (src$0 ++)) != 0))
;
RETURN (initial_dest$0);
)
})
((SIGNED LONG INT )factorial$0(((SIGNED LONG INT )n$0)){
(IF((n$0 <= 1)){
RETURN (1)} ELSE {
RETURN ((n$0 * (factorial$0((n$0 - 1)))))};
)
})
((VOID )optimization_demo$0(((SIGNED LONG INT )n$0)){
(((SIGNED LONG INT )m$0);
;
(m$0 = ((10 + 20) - (40 / 50)));
((30 + 50) + 60);
)
})
((VOID )auto_casting_demo$0(((VOID ))){
(((SIGNED LONG INT )p$0);
;
((SIGNED SHORT INT )m$0);
;
((SIGNED CHAR )k$0);
;
(p$0 = 10);
(m$0 = p$0);
(k$0 = m$0);
(print_string$0(STRING(10 32 73 110 116 32 118 97 108 117 101 32 115 116 111 114 101 100 58 0 )));
(print_int$0(p$0));
(print_string$0(STRING(10 32 115 104 111 114 116 32 118 97 108 117 101 32 115 116 111 114 101 100 58 0 )));
(print_int$0(m$0));
(print_string$0(STRING(10 32 67 104 97 114 32 118 97 108 117 101 32 115 116 111 114 101 100 58 32 0 )));
(print_int$0(k$0));
)
})
